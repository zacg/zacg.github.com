<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: android | Zac Gross]]></title>
  <link href="http://zacg.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://zacg.github.io/"/>
  <updated>2016-06-05T13:40:33-04:00</updated>
  <id>http://zacg.github.io/</id>
  <author>
    <name><![CDATA[Zac Gross]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Configuring Android Wear Emulator for Debugging With Physical Device]]></title>
    <link href="http://zacg.github.io/blog/2015/08/28/configuring-android-wear-emulator-for-debugging-with-physical-device/"/>
    <updated>2015-08-28T20:15:33-04:00</updated>
    <id>http://zacg.github.io/blog/2015/08/28/configuring-android-wear-emulator-for-debugging-with-physical-device</id>
    <content type="html"><![CDATA[<p>
I recently started developing an Android Wear app and needed to pair a watch running in an emulator to a physical phone(s4). The current documentation on the net is somewhat stale so the following is an up to date procedure:
</p>


<ol>
<li>Power on Android Watch AVD</li>
<li>Connect the physical phone via usb and ensure usb debugging is turned on in system options.</li>
<li>Turn on blue tooth debugging on the watch

<ul>
<li>swipe to get to the settings menu</li>
<li>scroll down to the about menu</li>
<li>tap 7 times on the build number to enable developer mode</li>
<li>navigate back to the main settings menu and select developer options</li>
<li>tap enable avd debugging</li>
<li>tap enable bluetooth debugging (disabled until avd is enabled)</li>
<li>on the home screen a notification should be displayed stating bluetooth debugging is enabled</li>
</ul>
</li>
<li>In an SDK console type "avd devices" both the physical phone and watch emulator should be listed</li>
<li>Type  "adb -d forward tcp:5601 tcp:5601" to map the emulator ports</li>
<li>On the phone download the Android Wear app from the play store.</li>
<li>Open the wear app and choose pair device.</li>
<li>On the pair device screen press the physical menu/settings button on the phone. An option to "connect to emulator" will appear, tap it.</li>
<li>The phone should find and connect to the emulator and display the connected options in the wear app. You can scroll to the bottom and tap one of test options to send a test notification to the paired watch.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Using Custom Header Title]]></title>
    <link href="http://zacg.github.io/blog/2014/02/28/android-using-custom-header-title/"/>
    <updated>2014-02-28T01:17:00-05:00</updated>
    <id>http://zacg.github.io/blog/2014/02/28/android-using-custom-header-title</id>
    <content type="html"><![CDATA[<p>
Trying to configure a custom header/title layout with the newer Android Holo Theme can be painful, often producing cryptic error messages. According to google the issue is with the new actionbar added in the halo theme conflicting with the older title configuration.
</p>




<p>
    Here is what worked for me: after creating a layout named "CustomHeader.xml" I added the following lines to my activity OnCreate method:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="p">&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="n">OnCreate</span> <span class="p">(</span><span class="n">Bundle</span> <span class="n">bundle</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">base</span><span class="p">.</span><span class="n">OnCreate</span> <span class="p">(</span><span class="n">bundle</span><span class="p">);</span>
</span><span class='line'>    <span class="n">RequestWindowFeature</span><span class="p">(</span><span class="n">WindowFeatures</span><span class="p">.</span><span class="n">CustomTitle</span><span class="p">);</span>
</span><span class='line'>    <span class="n">SetContentView</span> <span class="p">(</span><span class="n">Resource</span><span class="p">.</span><span class="n">Layout</span><span class="p">.</span><span class="n">Main</span><span class="p">);</span>
</span><span class='line'>    <span class="n">Window</span><span class="p">.</span><span class="n">SetFeatureInt</span> <span class="p">(</span><span class="n">WindowFeatures</span><span class="p">.</span><span class="n">CustomTitle</span><span class="p">,</span> <span class="n">Resource</span><span class="p">.</span><span class="n">Layout</span><span class="p">.</span><span class="n">CustomHeader</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
I then modified my androidmanifiest.xml and style.xml files to configure a custom theme that inherits from the oridinal halo theme but removes the action bar.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>androidmanifiest.xml </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>manifest<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>application android:theme=&quot;@style/CustomTheme&quot;<span class="ni">&amp;gt;&amp;lt;</span>/application<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/manifest<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>styles.xml </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>resources<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>style name=&quot;CustomTheme&quot; parent=&quot;android:Theme.Holo&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>item name=&quot;android:windowActionBar&quot;<span class="ni">&amp;gt;</span>false<span class="ni">&amp;lt;</span>/item<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/style<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/resources<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
If you don't already have a styles.xml file, it should be created in /resources/values/
</p>




<p>
If you try setting a custom header/title without removing the actionbar you will get the following runtime exception: <strong>"Cannot combine custom title with other title features"</strong>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xamarin Simple Text List View Helper]]></title>
    <link href="http://zacg.github.io/blog/2013/08/18/xamarin-simple-text-list-view-helper/"/>
    <updated>2013-08-18T13:14:00-04:00</updated>
    <id>http://zacg.github.io/blog/2013/08/18/xamarin-simple-text-list-view-helper</id>
    <content type="html"><![CDATA[<p>
    Recently while working on an Xamarin based Android project I came up with a handy helper class for displaying basic list views. It saves alot of boilerplate code by not forcing a new adapter implementation for every domain object you want to use in a list view.
</p>


<p>
    The code:
</p>


<script src="https://gist.github.com/zacg/6262608.js"></script>




<p>
    And to use it:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">ListAdapter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SimpleTextAdapter</span><span class="p">&lt;</span><span class="n">SomeBusinessObject</span><span class="p">&gt;</span> <span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="n">objects</span><span class="p">,</span> <span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span> <span class="k">return</span> <span class="n">item</span><span class="p">.</span><span class="n">Name</span><span class="p">;});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
    Use it with a custom id field:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">ListAdapter</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SimpleTextAdapter</span><span class="p">&lt;</span><span class="n">SomeBusinessObject</span><span class="p">&gt;</span> <span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="n">objects</span><span class="p">,</span> <span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span> <span class="k">return</span> <span class="n">item</span><span class="p">.</span><span class="n">Name</span><span class="p">;},</span> <span class="p">(</span><span class="n">item</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span> <span class="k">return</span> <span class="n">item</span><span class="p">.</span><span class="n">CustomId</span><span class="p">;});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
